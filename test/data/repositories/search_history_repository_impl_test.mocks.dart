// Mocks generated by Mockito 5.4.6 from annotations
// in listen_to_my_tracks/test/data/repositories/search_history_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:listen_to_my_tracks/data/datasources/search_history_local_datasource.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SearchHistoryLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchHistoryLocalDataSource extends _i1.Mock
    implements _i2.SearchHistoryLocalDataSource {
  MockSearchHistoryLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveSearchTerm(String? term) =>
      (super.noSuchMethod(
            Invocation.method(#saveSearchTerm, [term]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<String>> getSearchHistory() =>
      (super.noSuchMethod(
            Invocation.method(#getSearchHistory, []),
            returnValue: _i3.Future<List<String>>.value(<String>[]),
          )
          as _i3.Future<List<String>>);

  @override
  _i3.Future<void> clearSearchHistory() =>
      (super.noSuchMethod(
            Invocation.method(#clearSearchHistory, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
